<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/beans/spring-aop.xsd">

   <bean id="userService" class="com.boar.service.UserServiceImpl"/>
    <bean id="log" class="com.boar.log.log"/>
    <bean id="afterLog" class="com.boar.log.AfterLog"/>
    <!-- 方式一：使用原生的API接口-->
    <!-- 配置AOP:需要带入aop的约束-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 切入点:expression表达式 execution(要执行的位置!*****)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.boar.service.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash; 执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->
    <!-- 方式二：自定义类-->
<!--    <bean id="diy" class="com.boar.Diy.DiyPointCut"/>-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 方式二：自定义切面：ref要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash;切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution( * com.boar.service.UserServiceImpl.*.*())"/>-->
<!--            &lt;!&ndash; 通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:before method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->
    <!--方式三：使用注解 -->
    <bean id="annotationPointcut" class="com.boar.Diy.AnnotationPointCut"/>
    <!--方式三：开启注解支持 -->
    <aop:aspectj-autoproxy/>
</beans>